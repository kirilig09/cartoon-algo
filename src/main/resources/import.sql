-- -- TODO: Add working algorithm data
--
-- INSERT INTO algorithms(algo_name,algo_desc,algo_image,speed,complexity,video) VALUES ('Bubble Sort','Lorem','/assets/bubblesort.jpg','O(n^2)','Easy','https://www.youtube.com/embed/nmhjrI-aW5o%22%27');
-- INSERT INTO algorithms(algo_name,algo_desc,algo_image,speed,complexity,video) VALUES ('Bubble Sort','Lorem','/assets/bubblesort.jpg','O(n^2)','Easy','https://www.youtube.com/embed/nmhjrI-aW5o%22%27');
-- INSERT INTO algorithms(algo_name,algo_desc,algo_image,speed,complexity,video) VALUES ('Bubble Sort','Lorem','/assets/bubblesort.jpg','O(n^2)','Easy','https://www.youtube.com/embed/nmhjrI-aW5o%22%27');
-- INSERT INTO algorithms(algo_name,algo_desc,algo_image,speed,complexity,video) VALUES ('Bubble Sort','Lorem','/assets/bubblesort.jpg','O(n^2)','Easy','https://www.youtube.com/embed/nmhjrI-aW5o%22%27');
-- INSERT INTO algorithms(algo_name,algo_desc,algo_image,speed,complexity,video) VALUES ('Bubble Sort','Lorem','/assets/bubblesort.jpg','O(n^2)','Easy','https://www.youtube.com/embed/nmhjrI-aW5o%22%27');
INSERT INTO algorithms(algo_name, speed, complexity, algo_desc, video, algo_image) VALUES('Bubble Sort', 'The average speed is O(N ^ 2) and the best case is O(N), when the elements are sorted. One of the main advantages of this algorithm over the other ones is that it has the ability to check if the list is sorted.', 'Easy', 'Bubble sort is an algorithm used to sort an array of elements. The algorithm repeatedly steps through list, compares each pair of adjacent items and swaps them if the left one is bigger than the right.', 'https://www.youtube.com/embed/nmhjrI-aW5o', '/assets/bubblesort.jpg');


INSERT INTO algorithms(algo_name, speed, complexity, algo_desc, video, algo_image) VALUES('Counting Sort', 'The algorithms speed is always O(N + K), where K is the biggest number in the array. It is often found in another sorting algorithm as a subroutine operation.', 'Easy', 'Counting sort is an algorithm used to sort an array of elements. It is an integer sorting algorithm which means it uses arithmetic operations to achieve its goal. This sort literally counts how many times an element is present in the array.', 'https://www.youtube.com/embed/7zuGmKfUt7s', '/assets/countingsort.jpg');


INSERT INTO algorithms(algo_name, speed, complexity, algo_desc, video, algo_image) VALUES('Selection Sort', 'Its average speed is O(N ^ 2), means its worse than insertion sort in most cases. Among simple average-case O(N ^ 2) algorithms, selection sort almost always outperforms bubble sort and counting sort. Like counting sort, it is often found in subsorts.', 'Medium', 'Selection sort is an algorithm used to sort a list or an array. It is an in-place comparison sort, making it inefficient for large lists, and it generally performs worse than the similar sorting algorithms.', 'https://www.youtube.com/embed/xWBP4lzkoyM', '/assets/selectionsort.jpg');


INSERT INTO algorithms(algo_name, speed, complexity, algo_desc, video, algo_image) VALUES('Insertion Sort', 'The speed is adaptive, which means the operations are O(N * K), where each element is at most K places away from its sorted position. It is useful in lists with little amount of elements, but it could also be helpful in arrays which are almost sorted.', 'Medium', 'Insertion sort is a simple sorting algorithm that builds the final sorted array (or list) one item at a time. It is much less efficient on large lists than more advanced algorithms such as quick sort, heap sort or merge sort.', 'https://www.youtube.com/embed/OGzPmgsI-pQ', '/assets/insertionsort.jpg');


INSERT INTO algorithms(algo_name, speed, complexity, algo_desc, video, algo_image) VALUES('Comb Sort', 'The overall speed is O(N ^ 2 / 2 ^ P), where P is the number of increments. It is usually faster than the related sorting algos. The best case is O(N * logN), where the list is already sorted. Its worst case is O(N ^ 2) when the list is reversed.', 'Easy', 'Its a relatively simple sorting algorithm which was the first algorithm designed to have cases when the speed is O(N * logN). The basic idea is to eliminate small values near the end of the list, since in bubble sort these slow the sorting down a lot.', 'https://www.youtube.com/embed/n51GFZHXlYY', '/assets/combsort.jpg');


INSERT INTO algorithms(algo_name, speed, complexity, algo_desc, video, algo_image) VALUES('Heap Sort', 'The speed is always O(N * logN), relating to merge sort and quick sort, because of how it always does a fixed amount of operations for any array, no matter the size of the elements. Heap sort compares really well to quick sort.', 'Medium', 'Heap Sort is a sorting algorithm which uses a binary tree to complete its operations. Like the other O(N * logN) sorting algorithms it is comparison-based, in-place algorithm which means it mainly uses the swap operation.', 'https://www.youtube.com/embed/MtQL_ll5KhQ', '/assets/heapsort.jpg');


INSERT INTO algorithms(algo_name, speed, complexity, algo_desc, video, algo_image) VALUES('Merge Sort', 'The speed is always going to be O(N * logN), because it always does the same steps no matter the array its sorting. The algorithm relates to quick sort, but in most cases it beats it by least operations needed.', 'Hard', 'Merge sort was the first sort of its kind to have a constant speed, despite any characteristic of the array. This was one of the first divide and conquer algorithms to rule the programming industry, because of its speed.', 'https://www.youtube.com/embed/JSceec-wEyw', '/assets/mergesort,jpg');


INSERT INTO algorithms(algo_name, speed, complexity, algo_desc, video, algo_image) VALUES('Quick Sort', 'The speed of quick sort is usually O(N * logN), but in the worst case scenario is O(N ^ 2). Mind you, this is a really rare case, but in reality in its name is the word "quick", which leads to the concept of its really fast sorting ability.', 'Hard', 'Quick sort is an efficient sorting algorithm, one of the best,serving as a systematic method for sorting elements in an array. It is one of the most common used algorithm in the whole programming scene, especially in competitive programming.', 'https://www.youtube.com/embed/PgBzjlCcFvc', '/assets/quicksort.jpg');


INSERT INTO algorithms(algo_name, speed, complexity, algo_desc, video, algo_image) VALUES('Radix Sort', 'Its overall speed is O(W * N), where both worst and best is O(W * N). In some cases, where the digits are too much and the amount of numbers isnt so big, it is seen as that radix sort becomes worse than most high performance comparison based algorithms.', 'Hard', 'Radix sort is a non-comparative integer sorting algorithm that sorts data with integer keys by grouping keys by the individual digits which share the same significant position and value. It can also be used on strings and characters.', 'https://www.youtube.com/embed/nu4gDuFabIM', '/assets/radixsort.jpg')